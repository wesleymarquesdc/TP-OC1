.data
vetor1: .word 5 8 100
vetor2: .word 50 2 100

.text
main: 
	la a0, vetor1
    la a1, vetor2
    li a2, 3
    jal ra, covariance
    j exit
    
covariance:
	# configura stack
	addi sp, sp, -24
    sw ra, 20(sp)
    sw a1, 16(sp)
    sw a0, 12(sp) 
    sw s0, 8(sp)
    sw s1, 4(sp)
    sw s2, 0(sp)
    
    add a1, a2, zero # inicializa 2ยบ argumento com o numero de elementos
    
    # chama funcao mean para vetor1 e armazena sua media em s0
    jal ra mean 
    add s0, a0, zero
    
    # chama funcao mean para vetor2 e armazena sua media em s1
    lw a0, 16(sp)
    jal ra mean
    add s1, a0, zero
    
    lw a0, 12(sp)
    lw a1, 16(sp)
    li t0, 0
    li s2, 0
    whileCovariance: bge t0, a2, doneCovariance
    	# subtrai media do vetor1 de vetor1[i]
        slli t1, t0, 2
        add t1, t1, a0
        lw t1, 0(t1)
        sub t1, t1, s0
        
        # subtrai media do vetor2 de vetor2[i]
        slli t2, t0, 2
        add t2, t2, a1
        lw t2, 0(t2)
        sub t2, t2, s1
        
        # multiplica os resultados anteriores e armazena as somas consecutivas em s2
        mul t1, t1, t2
        add s2, s2, t1
        
        # incrementa variavel de controle
        addi t0, t0, 1
        j whileCovariance
    doneCovariance:
    	# calcula a covariancia e armazena em a0
    	addi t0, a2, -1
        div a0, s2, t0
        
        # configura stack
        lw s2, 0(sp)
        lw s1, 4(sp)
        lw s0, 8(sp)
        lw ra, 20(sp)
        addi sp, sp, 24
        
        jalr zero, 0(ra)
    
mean:
	# configura stack
	addi sp, sp, -4
    sw s0, 0(sp)
    
	li s0, 0
    li t0, 0
    whileMean: bge t0, a1, doneMean
    	# realiza a soma de todos os elementos do vetor e armazena em s0
    	slli t1, t0, 2
        add t1, t1, a0
        lw t1, 0(t1)
        add s0, s0, t1
        
        # incrementa variavel de controle
        addi t0, t0, 1
        j whileMean
    doneMean: 
    	# divide soma pelo numero de elementos
    	div a0, s0, a1
        
        # configura stack
        lw s0, 0(sp)
        addi sp, sp, 4
        
        jalr zero, 0(ra)
        
exit: nop